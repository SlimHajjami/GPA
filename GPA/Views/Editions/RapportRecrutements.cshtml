@{
    ViewBag.Title = "Rapport Recrutements";
    Layout = "~/Views/Shared/_LayoutEditions.cshtml";
}

@using GPB.Models;
@using System.Configuration;
@using Kendo.Mvc.UI;

<div class="main-container" id="#page">


    <div class="col-md-12">

        <div class="box-content mag-top-40">

            <div class="header-box">
                <div class="header-box-titre">
                    <span class="pull-left">
                        <h5>  Rapport recrutements</h5>
                    </span>

                </div>

            </div>

            <div class="content-box">
                <div class="table-responsive">


                    <div class="row" style="margin:1px;">

                        <div class="col-md-6">
                            <label>Projet </label>
                            @(Html.Kendo().DropDownList()
                                      .Name("projetFilter")
                                      .DataTextField("LIBELLE").OptionLabel("Sélectionnez...")
                                      .DataValueField("ID_PROJET")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetProjects", "CmbBoxs");
                                          });
                                      })
                                      .HtmlAttributes(new { style = "width: 100%" })
                                      .Events(e =>
                                      {
                                          e.Change("onChangeProjetFilter");
                                      })
                            )
                        </div>
                        <div class="col-md-3">
                            <label>Année</label>
                            @(Html.Kendo().DropDownList()
                                            .Name("dropdownAnnee")
                                            .DataTextField("Text").OptionLabel("Sélectionnez...").Value(DateTime.Now.Year.ToString())
                                    .DataValueField("Value")
                                            .Events(e => e.Change("onChangeAnnee"))
                                    .BindTo(new List<SelectListItem>() {
                                        new SelectListItem() {
                                            Text = "2013",
                                            Value = "2013"
                                        },
                                        new SelectListItem() {
                                            Text = "2014",
                                            Value = "2014"
                                        },
                                        new SelectListItem() {
                                            Text = "2015",
                                            Value = "2015"
                                        },
                                        new SelectListItem() {
                                            Text = "2016",
                                            Value = "2016"
                                        },
                                        new SelectListItem() {
                                            Text = "2017",
                                            Value = "2017"
                                        }
                                    })
                                    .HtmlAttributes(new { style = "width: 100%" })
                            )
                        </div>

                        <div class="col-md-3">
                            <label>Mois</label>
                            @(Html.Kendo().DropDownList()
                                       .Name("dropdownMois")
                                       .DataTextField("Text").OptionLabel("Sélectionnez...").Value(DateTime.Now.Month.ToString())
                                       .DataValueField("Value")
                                       .Events(e => e.Change("onChangeMois"))
                                       .BindTo(new List<SelectListItem>() {
                                           new SelectListItem() {
                                               Text = "Janvier",
                                               Value = "1"
                                           },
                                           new SelectListItem() {
                                               Text = "Février",
                                               Value = "2"
                                           },
                                           new SelectListItem() {
                                               Text = "Mars",
                                               Value = "3"
                                           },
                                           new SelectListItem() {
                                               Text = "Avril",
                                               Value = "4"
                                           },
                                           new SelectListItem() {
                                               Text = "Mai",
                                               Value = "5"
                                           },
                                           new SelectListItem() {
                                               Text = "Juin",
                                               Value = "6"
                                           },
                                           new SelectListItem() {
                                               Text = "Juillet",
                                               Value = "7"
                                           },
                                           new SelectListItem() {
                                               Text = "Aout",
                                               Value = "8"
                                           },
                                           new SelectListItem() {
                                               Text = "Septembre",
                                               Value = "9"
                                           },
                                           new SelectListItem() {
                                               Text = "Octobre",
                                               Value = "10"
                                           },
                                           new SelectListItem() {
                                               Text = "Novembre",
                                               Value = "11"
                                           },
                                           new SelectListItem() {
                                               Text = "Décembre",
                                               Value = "12"
                                           }
                                       })
                                       .HtmlAttributes(new { style = "width: 100%" })
                            )
                        </div>

                    </div>

                    <div id="div0">

                        @(Html.Kendo().ToolBar()
                                .Name("ToolBarPrj")
                                .HtmlAttributes(new { style = "margin:10px;margin-top:30px;" })
                                .Items(items =>
                                {
                                    items.Add().Type(CommandType.Button).Text("Exporter").Click("PDF").HtmlAttributes(new { style = "margin:5px;font-size:12px;font-name:Arial;font-weight:bold ;background-color: #fff;" }).SpriteCssClass("k-icon pdf-file");
                                    items.Add().Type(CommandType.Button).Text("Exporter").Click("EXCEL").HtmlAttributes(new { style = "margin:5px;font-size:12px;font-name:Arial;font-weight:bold; background-color: #fff;" }).SpriteCssClass("k-icon excel-file");
                                })
                        )

                        @(Html.Kendo().Grid<GPB.Models.RH.EmployeeContratViewModel>().Name("grid")
                               .Columns(columns =>
                               {
                                   columns.Template(@<text></text>).ClientTemplate("<i class='fa fa-print' style='cursor:pointer' onclick='print(this);' />").Width(25);
                                   columns.Bound(e => e.Employee).Title("Employée");
                                   columns.Bound(e => e.NumeroContrat).Filterable(false).Title("N° contrat");
                                   columns.Bound(e => e.Projet).Filterable(false);

                                   columns.Command(commands =>
                                   {
                                       commands.Custom("Details").Click("showDetails").Text("Details");
                                   }).Width(150);
                               }).Pageable().Filterable().Sortable()
                                                      .Editable(e => e
                                                      .Mode(GridEditMode.InLine))
                                                      .DataSource(dataSource => dataSource
                                                      .Ajax()
                                                      .Model(m =>
                                                      {
                                                          m.Id(e => e.Id);
                                                      })
                                                              .Read(read => read.Action("GetContrats", "RH").Data("gridData"))
                                                       )
                                                      .HtmlAttributes(new { style = "margin:10px;height:auto" })
                        )


                        @(Html.Kendo().Window()
                                .Name("windowDetails")
                                .Title("Détails")
                                .Visible(false)
                                .Content(@<text>
                                    <div class="row" style="margin:15px;">

                                        <div class="col-md-6">
                                            <label>Imprimé</label>
                                            @Html.CheckBox("imprimerDetails")
                                        </div>

                                        <div class="col-md-6">
                                            <label>Envoyé au chantier</label>
                                            @Html.CheckBox("envoyerChantierDetails")
                                        </div>
                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Affectation </label>
                                            @(Html.Kendo().DropDownList()
                                                    .Name("IdProjetDetails").Enable(false)
                                            .DataTextField("LIBELLE").OptionLabel("Sélectionnez...")
                                            .DataValueField("ID_PROJET")
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetProjects", "CmbBoxs");
                                                });
                                            })
                                            .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Employée </label>
                                            @(Html.Kendo().DropDownList()
                                                    .Name("IdEmployeeDetails").Enable(false)
                                            .DataTextField("Libelle").OptionLabel("Sélectionnez...")
                                            .DataValueField("Id")
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetEmployeesForCombo", "RH");
                                                });
                                            })
                                            .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>N° contrat</label>
                                            <input id="numeroContratDetails" name="numeroContratDetails" type="text" class="k-textbox" style="width: 100%;" disabled />
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Date déclaration</label>
                                            @(Html.Kendo().DatePicker().Enable(false)
                                             .Name("DateDeclarationDetails")
                                                     .HtmlAttributes(new { style = "width: 100%;" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Date début</label>
                                            @(Html.Kendo().DatePicker()
                                                     .Name("DateDebutDetails").Enable(false)
                                             .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Date fin</label>
                                            @(Html.Kendo().DatePicker()
                                                     .Name("DateFinDetails").Enable(false)
                                                     .HtmlAttributes(new { style = "width: 100%;" })
                                            )
                                        </div>
                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Fonction </label>
                                            @(Html.Kendo().DropDownList().Enable(false)
                                                 .Name("IdFonctionDetails")
                                         .DataTextField("Libelle").OptionLabel("Sélectionnez...")
                                         .DataValueField("Id")
                                         .DataSource(source =>
                                         {
                                             source.Read(read =>
                                             {
                                                 read.Action("GetFonctionsForCombo", "RH");
                                             });
                                         })
                                         .HtmlAttributes(new { style = "width: 100%;" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Durée</label>
                                            <input id="dureeDetails" name="dureeDetails" type="text" class="k-textbox" style="width: 100%;" disabled />
                                        </div>

                                    </div>

                                </text>)
                                                    .Draggable()
                                                    .Resizable()
                                                    .Modal(true)
                                                    .Width(800)
                                                    .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                        )



                    </div>
                </div>

            </div>

        </div>

    </div>


</div>

<script type="text/javascript">

    function onChangeProjetFilter() {
        $("#grid").data("kendoGrid").dataSource.read();
    }
    function onChangeMois() {
        $("#grid").data("kendoGrid").dataSource.read();
    }

    function onChangeAnnee() {
        $("#grid").data("kendoGrid").dataSource.read();
    }
    function gridData() {
        return {
            annee: $("#dropdownAnnee").val(),
            mois: $("#dropdownMois").val(),
            idProjet: $("#projetFilter").val()
        }
    }

    function showDetails(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $("#IdProjetDetails").data("kendoDropDownList").value(dataItem.IdProjet);
        $("#IdEmployeeDetails").data("kendoDropDownList").value(dataItem.IdEmployee);
        $("#IdFonctionDetails").data("kendoDropDownList").value(dataItem.IdFonction);
        $("#dureeDetails").val(dataItem.Duree);
        $("#numeroContratDetails").val(dataItem.NumeroContrat);
        $("#DateDebutDetails").data("kendoDatePicker").value(dataItem.DateDebut);
        $("#DateFinDetails").data("kendoDatePicker").value(dataItem.DateFin);
        $("#DateDeclarationDetails").data("kendoDatePicker").value(dataItem.DateDeclaration);
        $('#imprimerDetails').prop('checked', dataItem.Imprimer);
        $('#envoyerChantierDetails').prop('checked', dataItem.EnvoyerChantier);
        $('#imprimerDetails').attr('disabled', true);
        $('#envoyerChantierDetails').attr('disabled', true);
        $("#windowDetails").data("kendoWindow").center().open();
    }

    function print() {
        var grid = $("#grid").data("kendoGrid");
        var model = grid.dataItem($(event.target).closest("tr"));
        window.open('@Url.Action("ContratReport", "RH")' + "?id=" + model.Id);
    }

    function PDF() {
        var model = {
            projet: $("#projetFilter").val(),
            annee: $("#dropdownAnnee").val(),
            mois: $("#dropdownMois").val()
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetParameters", "RH")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(model),
            dataType: "json",
            success: function (result) {
               window.open('@Url.Action("RecrutementReport", "RH")' + "?type=PDF");
            },
            error: function (result) {
                alert('Oh no :(');
            }
        });
    }

    function EXCEL() {
        var model = {
            projet: $("#projetFilter").val(),
            annee: $("#dropdownAnnee").val(),
            mois: $("#dropdownMois").val()
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetParameters", "RH")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(model),
            dataType: "json",
            success: function (result) {
               window.open('@Url.Action("RecrutementReport", "RH")' + "?type=EXCEL");
            },
            error: function (result) {
                alert('Oh no :(');
            }
        });
    }
</script>


<style>
    .form-control,
    .container,
    .container-fluid,
    .row,
    .col-xs-1, .col-sm-1, .col-md-1, .col-lg-1,
    .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2,
    .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3,
    .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4,
    .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5,
    .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6,
    .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7,
    .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8,
    .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9,
    .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10,
    .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11,
    .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {
        -webkit-box-sizing: border-box !important;
        -moz-box-sizing: border-box !important;
        box-sizing: border-box !important;
    }

    input.k-textbox {
        padding: 0;
    }

    .k-window div.k-window-content {
        overflow: hidden;
    }
</style>





