@{
    ViewBag.Title = "AutresDepenses";
    Layout = "~/Views/Shared/_LayoutGestionVehicules.cshtml";

    var myUser = new KPIPrincipal();
}

@using GPA.Models;
@using System.Configuration;
@using Kendo.Mvc.UI;

<div class="main-container" id="#page">

    <div class="col-md-12">

        <div class="box-content mag-top-40">

            <div class="header-box">
                <div class="header-box-titre">
                    <span class="pull-left">
                        <h5>Autres Dépenses</h5>
                    </span>
                </div>
            </div>

            <div class="content-box">
                <div class="table-responsive">
                    @if (myUser.Profile == 1)
                    {
                        <div style="margin:1px" class="row">
                            <div class="col-md-2"><label>Client</label></div>
                            <div class="col-md-4">
                                @(Html.Kendo().DropDownList().Name("ClientFiltre")
                                      .ValuePrimitive(true)
                                      .OptionLabel("Sélectionner client...")
                                      .DataTextField("NomClient")
                                      .DataValueField("IdClient")
                                      .DataSource(dataSource =>
                                      {
                                          dataSource.Read(read => read.Action("GetClients", "CmbBoxs"));
                                      })
                                      .HtmlAttributes(new { style = "width: 100%" })
                                      .Events(e =>
                                      {
                                          e.Change("onChangeFilter");
                                      })
                                )
                            </div>
                        </div><br />
                    }
                    <div style="margin:1px" class="row">
                        <div class="col-md-2"><label>Département</label></div>
                        <div class="col-md-3">
                            @(Html.Kendo().DropDownList().Name("DepartementFiltre")
                         .ValuePrimitive(true)
                         .OptionLabel("Sélectionner département...")
                         .DataTextField("NomDepartement")
                         .DataValueField("IdDepartement")
                         .DataSource(dataSource =>
                         {
                             dataSource.Read(read => read.Action("GetDepartements", "CmbBoxs", new { client = myUser.Client }));
                         })
                         .HtmlAttributes(new { style = "width: 100%" })
                         .Events(e =>
                         {
                             e.Change("onChangeDepartement");
                         })
                            )
                        </div>
                        <div class="col-md-2"><label>Véhicule</label></div>
                        <div class="col-md-3">
                            @(Html.Kendo().DropDownList().Name("VehiculeFiltre")
                        .ValuePrimitive(true)
                        .OptionLabel("Sélectionner vehicule...")
                        .DataTextField("MatriculeVehicule")
                        .DataValueField("IdVehicule")
                        //  .CascadeFrom("DepartementFiltre")
                        .DataSource(dataSource =>
                        {
                            dataSource.Read(read => read.Action("GetVehiculesParDep", "CmbBoxs").Data("DepData"));
                        })
                        .HtmlAttributes(new { style = "width: 100%" })
                        .Events(e =>
                        {
                            e.Change("onChangeFilter");
                        })
                            )
                        </div>
                    </div>
                    <br />

                    <div style="margin:1px" class="row">

                        <div class="col-md-2"><label>Année</label></div>

                        <div class="col-md-3">
                            @(Html.Kendo().DropDownList().Name("AnneeFiltre")
                             .ValuePrimitive(true)
                             .OptionLabel("Sélectionner année...")
                             .DataTextField("Text")
                             .DataValueField("Value")
                             .DataSource(dataSource =>
                             {
                                 dataSource.Read(read => read.Action("GetReferentiel", "CmbBoxs", new { keyRef = "ANNEE" }));
                             })
                             .Value(DateTime.Now.Year.ToString())
                             .HtmlAttributes(new { style = "width: 100%" })
                             .Events(e =>
                             {
                                 e.Change("onChangeFilter");
                             })
                            )
                        </div>
                        <div class="col-md-2"><label>Mois</label></div>
                        <div class="col-md-3">
                            @(Html.Kendo().DropDownList().Name("MoisFiltre")
                            .ValuePrimitive(true)
                            .OptionLabel("Sélectionner mois...")
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .DataSource(dataSource =>
                            {
                                dataSource.Read(read => read.Action("GetReferentiel", "CmbBoxs", new { keyRef = "MOIS" }));
                            })
                            .Value(DateTime.Now.Month.ToString())
                            .HtmlAttributes(new { style = "width: 100%" })
                            .Events(e =>
                            {
                                e.Change("onChangeFilter");
                            })
                            )
                        </div>
                    </div><br />


                    <div id="div0">
                        @(Html.Kendo().ToolBar()
                              .Name("ToolBar")
                              .HtmlAttributes(new { style = "margin:10px;" })
                              .Items(items =>
                              {
                                  items.Add().Type(CommandType.Button).Text("Ajouter").Click("AddRow").HtmlAttributes(new { style = "margin:5px;font-size:12px;font-name:Arial;font-weight:bold" });
                              })
                        )

                        @(Html.Kendo().Grid<AutresDepenseModel>()
                              .Name("Grid").HtmlAttributes(new { style = "margin:10px;height:auto" })
                              .Columns(columns =>
                              {
                                  
                                  columns.ForeignKey(e => e.DepenseId, (System.Collections.IEnumerable)ViewBag.ListDepenses, "Id", "Depense");
                                  columns.ForeignKey(e => e.VehiculeId, (System.Collections.IEnumerable)ViewBag.ListVehicules, "IdVehicule", "MatriculeVehicule");
                                  columns.Bound(e => e.DateDepenses);
                                  columns.Bound(e => e.Kilometrage);
                                  columns.Bound(e => e.CoutTotal);

                                  columns.Command(commands =>
                                  {
                                      commands.Custom("Modifier").Click("EditRow").Text("Modifier");
                                      commands.Destroy().Text("Supp.");
                                  }).Width(210);
                              })
                              .Editable(e => e
                                  .Mode(GridEditMode.PopUp)//.TemplateName("PieceEditView")
                                  .Window(w => w.Title("Ajouter/Modifier Dépense").Width(600))
                                  .DisplayDeleteConfirmation("Êtes-vous sûr de vouloir supprimer cet enregistrement?")
                               )
                              .Pageable(pageable => pageable.Refresh(true))
                              .Sortable()
                              .Selectable()
                              .Navigatable()
                              .Filterable()
                              .Filterable(filterable => filterable
                              .Extra(false)
                              .Operators(operators => operators
                              .ForString(str => str.Clear()
                              .StartsWith("Commence avec")
                              .IsEqualTo("Est égale à")
                              .IsNotEqualTo("N'est pas égale à")
                              ))
                              )
                              .Events(e =>
                              {
                                  e.Edit("onEdit");
                              })
                              .DataSource(dataSource => dataSource
                              .Ajax()
                              .Model(m =>
                              {
                                  m.Id(f => f.Id);
                                  m.Field(p => p.Id).Editable(false);
                              })
                              .Read(read => read.Action("Read", "AutresDepenses").Data("filterData"))
                              .Destroy("Delete", "AutresDepenses")
                              .Update("Update", "AutresDepenses")
                              .Create("Create", "AutresDepenses")
                              )
                        )
                    </div>
                </div>
            </div>

        </div>

    </div>

</div>
<script type="text/javascript">
    function onChangeFilter() {
        $("#Grid").data("kendoGrid").dataSource.page(1);
    }
    function DepData() {
        var client = 0;
        var departement = 0;

        if ($("#DepartementFiltre").val() != null && $("#DepartementFiltre").val() != '') {
            departement = $("#DepartementFiltre").val();
        }
        return { client: client, departement: departement };
    }
    function onChangeDepartement() {
        var dropdown = $("#VehiculeFiltre").data("kendoDropDownList");
        dropdown.dataSource.read();
        $("#Grid").data("kendoGrid").dataSource.page(1);
    }
    function AddRow() {
        var grid = $("#Grid").data("kendoGrid");
        grid.addRow();
    }

    function EditRow(e) {
        var grid = $("#Grid").getKendoGrid(),
        selectedRow = this.dataItem($(e.currentTarget).closest("tr"));
        grid.editRow(selectedRow);
    }

    function onEdit(e) {
        $("a.k-grid-update")[0].innerHTML = "<span class='k-icon k-update'></span>Enregistrer";
        //if (e.model.isNew()) {
        //    $('.k-window-title').text("Nouvelle Pièce");
        //}
        //else {
        //    $('.k-window-title').text("Modifier Pièce");
        //}
    }
    //function filterData() {
    //    var client = 0;
    //    if ($("#ClientFiltre").val() != null && $("#ClientFiltre").val() != '') {
    //        client = $("#ClientFiltre").val();
    //    }
    //    return { client: client };
    //}
    function filterData() {
        var departement = 0;
        var client = 0;
        var mois = 0;
        var annee = 0;
        var vehicule = 0;
        if ($("#DepartementFiltre").val() != null && $("#DepartementFiltre").val() != '') {
            departement = $("#DepartementFiltre").val();
        }
        if ($("#ClientFiltre").val() != null && $("#ClientFiltre").val() != '') {
            client = $("#ClientFiltre").val();
        }
        if ($("#AnneeFiltre").val() != null && $("#AnneeFiltre").val() != '') {
            annee = $("#AnneeFiltre").val();
        }
        if ($("#MoisFiltre").val() != null && $("#MoisFiltre").val() != '') {
            mois = $("#MoisFiltre").val();
        }

        if ($("#VehiculeFiltre").val() != null && $("#VehiculeFiltre").val() != '') {
            vehicule = $("#VehiculeFiltre").val();
        }

        return { departement: departement, client: client, annee: annee, mois: mois, vehicule: vehicule };
    }
</script>

