@{
    ViewBag.Title = "Rapport Employées";
    Layout = "~/Views/Shared/_LayoutEditions.cshtml";
}

@using GPB.Models;
@using System.Configuration;
@using Kendo.Mvc.UI;

<div class="main-container" id="#page">


    <div class="col-md-12">

        <div class="box-content mag-top-40">

            <div class="header-box">
                <div class="header-box-titre">
                    <span class="pull-left">
                        <h5>  Rapport employées</h5>
                    </span>

                </div>

            </div>

            <div class="content-box">
                <div class="table-responsive">

                    <div class="row" style="margin:1px;">

                        <div class="col-md-4">
                            <label>Fonction </label>
                            @(Html.Kendo().DropDownList()
                                         .Name("FonctionFilter")
                                         .DataTextField("Libelle").OptionLabel("Sélectionnez...")
                                         .DataValueField("Id")
                                         .DataSource(source =>
                                         {
                                             source.Read(read =>
                                             {
                                                 read.Action("GetFonctionsForCombo", "RH");
                                             });
                                         }).Events(e => e.Change("onChangeFonction"))
                                         .HtmlAttributes(new { style = "width: 100%;" })
                            )
                        </div>


                        <div class="col-md-4">
                            <label>Type</label>
                            @(Html.Kendo().DropDownList()
                                             .Name("TypeFilter")
                                             .DataTextField("Text").OptionLabel("Sélectionnez...")
                                             .DataValueField("Value")
                                             .BindTo(new List<SelectListItem>() {
                                             new SelectListItem() {
                                                  Text = "Interne",
                                                  Value = "1"
                                              },
                                              new SelectListItem() {
                                                  Text = "Intérimaire",
                                                  Value = "2"
                                              }
                                             }).Events(e => e.Change("onChangeType"))
                                            .HtmlAttributes(new { style = "width: 100%" })
                            )
                        </div>

                    </div>

                    <div id="div0">

                        @(Html.Kendo().ToolBar()
                                .Name("ToolBarPrj")
                                .HtmlAttributes(new { style = "margin:10px;margin-top:30px;" })
                                .Items(items =>
                                {
                                    items.Add().Type(CommandType.Button).Text("Exporter").Click("PDF").HtmlAttributes(new { style = "margin:5px;font-size:12px;font-name:Arial;font-weight:bold ;background-color: #fff;" }).SpriteCssClass("k-icon pdf-file");
                                    items.Add().Type(CommandType.Button).Text("Exporter").Click("EXCEL").HtmlAttributes(new { style = "margin:5px;font-size:12px;font-name:Arial;font-weight:bold; background-color: #fff;" }).SpriteCssClass("k-icon excel-file");
                                })
                        )

                        @(Html.Kendo().Grid<GPB.Models.RH.EmployeeViewModel>().Name("grid")
                               .Columns(columns =>
                               {
                                   columns.Bound(e => e.Nom);
                                   columns.Bound(e => e.Prenom).Title("Prénom");
                                   columns.Bound(e => e.anneeEmbauche).Title("Année d'embauche").Filterable(false);
                                   columns.Bound(e => e.Telephone).Filterable(false).Title("Téléphone");
                                   columns.Command(commands =>
                                   {
                                       commands.Custom("Details").Click("showDetails").Text("Details");
                                       commands.Custom("Historique").Click("showHistorique").Text("Historique");
                                   }).Width(250);
                               }).Pageable().Filterable().Sortable()
                              .Editable(e => e
                              .Mode(GridEditMode.InLine))
                              .DataSource(dataSource => dataSource
                              .Ajax()
                              .Model(m =>
                              {
                                  m.Id(e => e.Id);
                              })
                              .Read(read => read.Action("GetEmployees", "RH").Data("gridData"))
                               )
                              .HtmlAttributes(new { style = "margin:10px;height:auto" })
                        )



                        @(Html.Kendo().Window()
                                .Name("windowDetails")
                                .Title("Détails")
                                .Visible(false)
                                .Content(@<text>
                                    <div class="row" style="margin:15px;">

                                        <div class="col-md-6">
                                            <label>Nom</label>
                                            <input id="nomDetails" name="nomDetails" type="text" class="k-textbox" style="width: 100%;" disabled />
                                        </div>

                                        <div class="col-md-6">
                                            <label>Prénom</label>
                                            <input id="prenomDetails" name="prenomDetails" type="text" class="k-textbox" style="width: 100%;" disabled />
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Date de naissance</label>
                                            @(Html.Kendo().DatePicker().Enable(false)
                                                     .Name("DateNaissanceDetails")
                                             .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Fonction </label>
                                            @(Html.Kendo().DropDownList().Enable(false)
                                         .Name("IdFonctionDetails")
                                         .DataTextField("Libelle").OptionLabel("Sélectionnez...")
                                         .DataValueField("Id")
                                         .DataSource(source =>
                                         {
                                             source.Read(read =>
                                             {
                                                 read.Action("GetFonctionsForCombo", "RH");
                                             });
                                         })
                                         .HtmlAttributes(new { style = "width: 100%;" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Date d'embauche</label>
                                            @(Html.Kendo().DatePicker().Enable(false)
                                             .Name("DateEmbaucheDetails")
                                             .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>

                                        <div class="col-md-10" style="margin-top:15px;">
                                            <label>Adresse</label>
                                            <input id="adresseDetails" name="adresseDetails" type="text" class="k-textbox" style="width: 100%;" disabled />
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Téléphone</label>
                                            <input id="telephoneDetails" name="telephoneDetails" type="text" class="k-textbox" style="width: 100%;" disabled />
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Email</label>
                                            <input id="emailDetails" name="emailDetails" type="text" class="k-textbox" style="width: 100%;" disabled />
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Situation familiale</label>
                                            @(Html.Kendo().DropDownList().Enable(false)
                                                     .Name("SituationFamilialeDetails")
                                             .DataTextField("Text").OptionLabel("Sélectionnez...")
                                             .DataValueField("Value")
                                             .BindTo(new List<SelectListItem>() {
                                             new SelectListItem() {
                                                  Text = "Célibataire",
                                                  Value = "1"
                                              },
                                              new SelectListItem() {
                                                  Text = "Marié",
                                                  Value = "2"
                                              }
                                             })
                                            .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>

                                        <div class="col-md-6" style="margin-top:15px;" id="nbrEnfantsDetails">
                                            <label>Nombre d'enfants</label>
                                            <input id="nombreEnfantsDetails" name="nombreEnfantsDetails" type="number" class="k-textbox" style="width: 100%;" disabled />
                                        </div>


                                        <div class="col-md-6" style="margin-top:15px;">
                                            <label>Type</label>
                                            @(Html.Kendo().DropDownList()
                                                     .Name("TypeDetails").Enable(false)
                                             .DataTextField("Text").OptionLabel("Sélectionnez...")
                                             .DataValueField("Value")
                                             .BindTo(new List<SelectListItem>() {
                                             new SelectListItem() {
                                                  Text = "Interne",
                                                  Value = "1"
                                              },
                                              new SelectListItem() {
                                                  Text = "Intérimaire",
                                                  Value = "2"
                                              }
                                             })
                                            .HtmlAttributes(new { style = "width: 100%" })
                                            )
                                        </div>
                                    </div>

                                </text>)
                                                                                                    .Draggable()
                                                                                                    .Resizable()
                                                                                                    .Modal(true)
                                                                                                    .Width(800)
                                                                                                    .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                        )



                        @(Html.Kendo().Window()
                                .Name("windowHistorique")
                                .Title("Historique")
                                .Visible(false)
                                .Content(@<text>
                                    <div class="row" style="margin:15px;">

                                        @(Html.Kendo().Grid<GPB.Models.RH.EmployeeHistoriqueViewModel>().Name("gridHistorique")
                               .Columns(columns =>
                               {
                                   columns.Bound(e => e.Fonction).Filterable(false);
                                   columns.Bound(e => e.DateDebut).Filterable(false);
                                   columns.Bound(e => e.DateFin).Filterable(false);
                               }).Pageable().Filterable()
                                        .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .Model(m =>
                                        {
                                            m.Id(e => e.Id);
                                        })
                                                  .Read(read => read.Action("GetEmployeeHistorique", "RH").Data("HistoriqueData"))
                                                    ).AutoBind(false)
                                        .HtmlAttributes(new { style = "margin:10px;height:auto" }))


                                    </div>
                                </text>)
                                                        .Draggable()
                                                        .Resizable()
                                                        .Modal(true)
                                                        .Width(800)
                                                        .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                        )
                    </div>
                </div>

            </div>

        </div>

    </div>


</div>

<script type="text/javascript">

    var idEmployee = 0;

    function onChangeFonction() {
        $("#grid").data("kendoGrid").dataSource.page(1);
    }
    function onChangeType() {
        $("#grid").data("kendoGrid").dataSource.page(1);
    }

    function gridData() {
        return {
            idFonction: $("#FonctionFilter").val(),
            type: $("#TypeFilter").val()
        }
    }

    function onChangeSituationFamiliale() {
        if ($("#SituationFamiliale").val() == 2) {
            $("#nbrEnfants").show();
        }
        else {
            $("#nbrEnfants").hide();
        }
    }

    function showDetails(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $("#nomDetails").val(dataItem.Nom);
        $("#prenomDetails").val(dataItem.Prenom);
        $("#adresseDetails").val(dataItem.Adresse);
        $("#telephoneDetails").val(dataItem.Telephone);
        $("#emailDetails").val(dataItem.Email);
        $("#DateNaissanceDetails").data("kendoDatePicker").value(dataItem.DateNaissance);
        $("#DateEmbaucheDetails").data("kendoDatePicker").value(dataItem.DateEmbauche);
        $("#IdFonctionDetails").data("kendoDropDownList").value(dataItem.IdFonction);
        $("#SituationFamilialeDetails").data("kendoDropDownList").value(dataItem.SituationFamiliale);
        $("#TypeDetails").data("kendoDropDownList").value(dataItem.Type);
        if (dataItem.SituationFamiliale == 2) {
            $("#nbrEnfantsDetails").show();
            $("#nombreEnfantsDetails").val(dataItem.NombreEnfants);
        }
        else {
            $("#nbrEnfantsDetails").hide();
        }
        $("#windowDetails").data("kendoWindow").center().open();
    }

    function showHistorique(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        idEmployee = dataItem.Id;
        $("#gridHistorique").data("kendoGrid").dataSource.read();
        $("#windowHistorique").data("kendoWindow").open().center();
    }

    function HistoriqueData() {
        return {
            id: idEmployee
        }
    }


    function PDF() {
        var model = {
            idFonction: $("#FonctionFilter").val(),
            type: $("#TypeFilter").val()
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetParameters", "RH")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(model),
            dataType: "json",
            success: function (result) {
                window.open('@Url.Action("EmployeesReport", "RH")' + "?type=PDF");
            },
            error: function (result) {
                alert('Oh no :(');
            }
        });
    }

    function EXCEL() {
        var model = {
            idFonction: $("#FonctionFilter").val(),
            type: $("#TypeFilter").val()
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetParameters", "RH")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(model),
            dataType: "json",
            success: function (result) {
                window.open('@Url.Action("EmployeesReport", "RH")' + "?type=EXCEL");
            },
            error: function (result) {
                alert('Oh no :(');
            }
        });
    }
</script>


<style>
    .form-control,
    .container,
    .container-fluid,
    .row,
    .col-xs-1, .col-sm-1, .col-md-1, .col-lg-1,
    .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2,
    .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3,
    .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4,
    .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5,
    .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6,
    .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7,
    .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8,
    .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9,
    .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10,
    .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11,
    .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {
        -webkit-box-sizing: border-box !important;
        -moz-box-sizing: border-box !important;
        box-sizing: border-box !important;
    }

    input.k-textbox {
        padding: 0;
    }

    .k-window div.k-window-content {
        overflow: hidden;
    }
</style>





